静态方法
Array.from() ES6
Array.isArray() ES5
Array.of() ES6

实例属性
Array.prototype.length ES1
Array.prototype.constructor


实例方法 分类（修改器方法，访问方法，迭代方法）
修改器方法 （改变原数组）
1. copyWithin ES6
2. fill ES6
3. pop 删除最后一个 返回删除的这个元素
4. push 一次可以push多个
5. reverse 颠倒数组中的排序
6. shift 删除第一个 返回删除的这个元素
7. sort 
8. splice 添加或删除，或修改（即先删除再添加）数组中的任意个元素
9. unshift 重点1.可以添加多个 重点2.返回这个数组的新长度

访问方法 （不改变原数组）
1. concat ES3
2. join
3. slice 抽取当前数组中的一段元素组合成一个新数组
4. toString
5. toLocalString 用处不大
6. indexOf 重点1.找到第一个就返回，重点2.找不到返回-1
7. lastIndexOf 从后向前找
a. includes ES2016 判断当前数组是否包含某指定的值
b. toSource  不是标准方法

迭代方法
1. forEach
2. entries ES6 返回一个键值对迭代器对象 Array Iterator  next() 是iterator的方法，{ value: [ 0, 'a' ], done: false }  done 表示迭达器是否结束。
3. every ES5 全部满足回调返回true
4. some 有一个慢速测试函数返回true
5. filter 将所有在过滤函数中返回true的数组远素放进一个新数组中并返回
6. map 返回一个由回调函数的返回值组成的新数组
7. reduce
8. reduceRight
9. Array.prototype[@@iterator]() //arr[Symbol.iterator]() 返回 iterator 对象

a. find 找到第一个满足测试函数的元素，返回这个元素
b. findIndex 找到第一个元素返回它的索引
c. values 返回iterator



entries    




ES6 = ES2015